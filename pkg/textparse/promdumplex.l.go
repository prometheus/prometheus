// Code generated by golex. DO NOT EDIT.

// Copyright 2020 The Prometheus Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package textparse

import (
	"fmt"
)

// Lex is called by the parser generated by "go tool yacc" to obtain each
// token. The method is opened before the matching rules block and closed at
// the end of the file.
func (l *promDumpLexer) Lex() token {
	if l.i >= len(l.b) {
		return tEOF
	}
	c := l.b[l.i]
	l.start = l.i

yystate0:

	switch yyt := l.state; yyt {
	default:
		panic(fmt.Errorf(`invalid start condition %d`, yyt))
	case 0: // start condition: INITIAL
		goto yystart1
	case 1: // start condition: sComment
		goto yystart6
	case 2: // start condition: sMeta1
		goto yystart9
	case 3: // start condition: sMeta2
		goto yystart12
	case 4: // start condition: sLabels
		goto yystart15
	case 5: // start condition: sLValue
		goto yystart28
	case 6: // start condition: sValue
		goto yystart32
	case 7: // start condition: sTimestamp
		goto yystart34
	case 8: // start condition: sExemplar
		goto yystart37
	case 9: // start condition: sEValue
		goto yystart40
	case 10: // start condition: sETimestamp
		goto yystart43
	case 11: // start condition: sMName
		goto yystart46
	}

	goto yystate0 // silence unused label error
	goto yystate1 // silence unused label error
yystate1:
	c = l.next()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '\n':
		goto yystate4
	case c == '\t' || c == ' ':
		goto yystate3
	case c == '\x00':
		goto yystate2
	case c == '{':
		goto yystate5
	}

yystate2:
	c = l.next()
	goto yyrule1

yystate3:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

yystate4:
	c = l.next()
	goto yyrule2

yystate5:
	c = l.next()
	goto yyrule3

	goto yystate6 // silence unused label error
yystate6:
	c = l.next()
yystart6:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate8
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate7
	}

yystate7:
	c = l.next()
	goto yyrule16

yystate8:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate9 // silence unused label error
yystate9:
	c = l.next()
yystart9:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate11
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate10
	}

yystate10:
	c = l.next()
	goto yyrule17

yystate11:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate12 // silence unused label error
yystate12:
	c = l.next()
yystart12:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate14
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate13
	}

yystate13:
	c = l.next()
	goto yyrule18

yystate14:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate15 // silence unused label error
yystate15:
	c = l.next()
yystart15:
	switch {
	default:
		goto yyabort
	case c == ',':
		goto yystate16
	case c == '=':
		goto yystate17
	case c == '\t' || c == ' ':
		goto yystate3
	case c == '_':
		goto yystate19
	case c == '}':
		goto yystate27
	case c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate16:
	c = l.next()
	goto yyrule9

yystate17:
	c = l.next()
	goto yyrule11

yystate18:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate19:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == '_':
		goto yystate20
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate20:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == 'n':
		goto yystate21
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z':
		goto yystate18
	}

yystate21:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == 'a':
		goto yystate22
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z':
		goto yystate18
	}

yystate22:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == 'm':
		goto yystate23
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'l' || c >= 'n' && c <= 'z':
		goto yystate18
	}

yystate23:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == 'e':
		goto yystate24
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'd' || c >= 'f' && c <= 'z':
		goto yystate18
	}

yystate24:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == '_':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate25:
	c = l.next()
	switch {
	default:
		goto yyrule10
	case c == '_':
		goto yystate26
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate26:
	c = l.next()
	switch {
	default:
		goto yyrule5
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate18
	}

yystate27:
	c = l.next()
	goto yyrule8

	goto yystate28 // silence unused label error
yystate28:
	c = l.next()
yystart28:
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate29
	case c == '\t' || c == ' ':
		goto yystate3
	}

yystate29:
	c = l.next()
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate30
	case c == '\\':
		goto yystate31
	case c >= '\x01' && c <= '!' || c >= '#' && c <= '[' || c >= ']' && c <= 'ÿ':
		goto yystate29
	}

yystate30:
	c = l.next()
	goto yyrule12

yystate31:
	c = l.next()
	switch {
	default:
		goto yyabort
	case c >= '\x01' && c <= '\t' || c >= '\v' && c <= 'ÿ':
		goto yystate29
	}

	goto yystate32 // silence unused label error
yystate32:
	c = l.next()
yystart32:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate3
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'z' || c >= '|' && c <= 'ÿ':
		goto yystate33
	}

yystate33:
	c = l.next()
	switch {
	default:
		goto yyrule13
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'z' || c >= '|' && c <= 'ÿ':
		goto yystate33
	}

	goto yystate34 // silence unused label error
yystate34:
	c = l.next()
yystart34:
	switch {
	default:
		goto yyabort
	case c == '\n':
		goto yystate35
	case c == '\t' || c == ' ':
		goto yystate3
	case c >= '0' && c <= '9':
		goto yystate36
	}

yystate35:
	c = l.next()
	goto yyrule15

yystate36:
	c = l.next()
	switch {
	default:
		goto yyrule14
	case c >= '0' && c <= '9':
		goto yystate36
	}

	goto yystate37 // silence unused label error
yystate37:
	c = l.next()
yystart37:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate39
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate38
	}

yystate38:
	c = l.next()
	goto yyrule19

yystate39:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate40 // silence unused label error
yystate40:
	c = l.next()
yystart40:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate42
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate41
	}

yystate41:
	c = l.next()
	goto yyrule20

yystate42:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate43 // silence unused label error
yystate43:
	c = l.next()
yystart43:
	switch {
	default:
		goto yyabort
	case c == '\t' || c == ' ':
		goto yystate45
	case c >= '\x01' && c <= '\b' || c >= '\v' && c <= '\x1f' || c >= '!' && c <= 'ÿ':
		goto yystate44
	}

yystate44:
	c = l.next()
	goto yyrule21

yystate45:
	c = l.next()
	switch {
	default:
		goto yyrule4
	case c == '\t' || c == ' ':
		goto yystate3
	}

	goto yystate46 // silence unused label error
yystate46:
	c = l.next()
yystart46:
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate47
	case c == '=':
		goto yystate50
	case c == '\t' || c == ' ':
		goto yystate3
	}

yystate47:
	c = l.next()
	switch {
	default:
		goto yyabort
	case c == ':' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate48
	}

yystate48:
	c = l.next()
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate49
	case c >= '0' && c <= ':' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate48
	}

yystate49:
	c = l.next()
	goto yyrule7

yystate50:
	c = l.next()
	goto yyrule6

yyrule1: // \0
	{
		return tEOF
	}
yyrule2: // \n
	{
		l.state = sInit
		return tLinebreak
		goto yystate0
	}
yyrule3: // \{
	{
		l.state = sLabels
		return tBraceOpen
		goto yystate0
	}
yyrule4: // [ \t]+
	{
		return tWhitespace
	}
yyrule5: // __name__
	{
		l.state = sMName
		return tMNameLabel
		goto yystate0
	}
yyrule6: // =
	{
		return tEqual
	}
yyrule7: // \"{M}({M}|{D})*\"
	{
		l.state = sLabels
		return tMName
		goto yystate0
	}
yyrule8: // \}
	{
		l.state = sValue
		return tBraceClose
		goto yystate0
	}
yyrule9: // ,
	{
		return tComma
	}
yyrule10: // {L}({L}|{D})*
	{
		return tLName
	}
yyrule11: // =
	{
		l.state = sLValue
		return tEqual
		goto yystate0
	}
yyrule12: // \"(\\.|[^\\"])*\"
	{
		l.state = sLabels
		return tLValue
		goto yystate0
	}
yyrule13: // [^{ \t\n]+
	{
		l.state = sTimestamp
		return tValue
		goto yystate0
	}
yyrule14: // {D}+
	{
		return tTimestamp
	}
yyrule15: // \n
	{
		l.state = sInit
		return tLinebreak
		goto yystate0
	}
yyrule16: // .
	{
		return tInvalid
	}
yyrule17: // .
	{
		return tInvalid
	}
yyrule18: // .
	{
		return tInvalid
	}
yyrule19: // .
	{
		return tInvalid
	}
yyrule20: // .
	{
		return tInvalid
	}
yyrule21: // .
	{ // avoid go vet determining the below panic will not be reached
		return tInvalid
	}
	panic("unreachable")

	goto yyabort // silence unused label error

yyabort: // no lexem recognized

	return tInvalid
}
