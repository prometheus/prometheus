package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "clientset.go",
        "doc.go",
        "import.go",
    ],
    importpath = "k8s.io/client-go/kubernetes",
    deps = [
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/k8s.io/client-go/discovery:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta2:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authentication/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authentication/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authorization/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authorization/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v2alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/certificates/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/events/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/networking/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/policy/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/settings/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/util/flowcontrol:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/fake:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/scheme:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/apps/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/apps/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/apps/v1beta2:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/authentication/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/authentication/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/authorization/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/authorization/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/autoscaling/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/batch/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/batch/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/batch/v2alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/certificates/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/core/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/events/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/extensions/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/networking/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/policy/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/rbac/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/rbac/v1alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/rbac/v1beta1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/settings/v1alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/storage/v1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/storage/v1alpha1:all-srcs",
        "//staging/src/k8s.io/client-go/kubernetes/typed/storage/v1beta1:all-srcs",
    ],
    tags = ["automanaged"],
)
