package cppbridge_test

import (
	"github.com/gobuffalo/packr/v2/file/resolver/encoding/hex"
	"github.com/prometheus/prometheus/pp/go/cppbridge"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestHeadWalEncoder_Finalize(t *testing.T) {
	lss := cppbridge.NewQueryableLssStorage()
	encoder := cppbridge.NewHeadWalEncoder(0, 1, lss)
	segmentData, err := encoder.Finalize()
	require.NoError(t, err)
	_ = segmentData
}

func TestHeadWalDecoder_DecodeToDataStorage(t *testing.T) {
	// Arrange
	const kTestBufferVersion = 3

	dataStorage := cppbridge.NewHeadDataStorage()
	encoder := cppbridge.NewHeadEncoderWithDataStorage(dataStorage)
	decoder := cppbridge.NewHeadWalDecoder(cppbridge.NewQueryableLssStorage(), kTestBufferVersion)
	segment, _ := hex.DecodeString

	// Act
	err := decoder.DecodeToDataStorage(segment, encoder)

	// Assert
	require.NoError(t, err)
	require.Equal(t, cppbridge.TimeInterval{MinT: 1660828401000, MaxT: 1660828410000}, dataStorage.TimeInterval())
}
