{{/* vim: set ft=html: */}}

{{/* Navbar, should be passed . */}}
{{ define "navbar" }}
<nav class="navbar navbar-inverse navbar-static-top">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="{{ pathPrefix }}/">Prometheus</a>
    </div>

    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li><a href="{{ pathPrefix }}/alerts">Alerts</a></li>
        <li><a href="https://www.pagerduty.com/">PagerDuty</a></li>
      </ul>
    </div>
</nav>
{{ end }}

{{/* LHS menu, should be passed . */}}
{{ define "menu" }}
<div class="navbar navbar-inverse navbar-static-top">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".main-nav">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>
    <div class="collapse navbar-collapse main-nav">
      <ul class="nav navbar-nav">

{{ template "_menuItem" (args . "index.html.example" "Overview") }}

{{ if query "up{job='haproxy'}" }}
{{ template "_menuDropMenu" (args . "haproxy.html" "HAProxy") }}
  {{ template "_menuDropItem" (args . "haproxy-frontends.html" "Frontends") }}
  {{ template "_menuDropItem" (args . "haproxy-backends.html" "Backends") }}
{{ template "_menuEndDropMenu" }}
{{ end }}

{{ if query "up{job='cassandra'}" }}
{{ template "_menuItem" (args . "cassandra.html" "Cassandra") }}
{{ end }}

{{ if query "up{job='blackbox'}" }}
{{ template "_menuItem" (args . "blackbox.html" "Blackbox") }}
{{ end }}

{{ if query "up{job='node'}" }}
{{ template "_menuDropMenu" (args . "node.html" "Node") }}
{{ range query "up{job='node'}" | sortByLabel "instance" }}
  {{ template "_menuDropDivider" }}
  {{ template "_menuDropItem" (args . (printf "node-overview.html?instance=%s" (.Labels.instance | urlquery)) (reReplaceAll "(.*?://)([^:/]+?)(:\\d+)?/.*" "$2" .Labels.instance)) }}
  {{ template "_menuDropItem" (args . (printf "node-cpu.html?instance=%s" (.Labels.instance | urlquery)) "CPU") }}
  {{ template "_menuDropItem" (args . (printf "node-disk.html?instance=%s" (.Labels.instance | urlquery)) "Disk") }}
{{ end }}
{{ template "_menuEndDropMenu" }}
{{ end }}

{{ if query "up{job='prometheus'}" }}
{{ template "_menuDropMenu" (args . "prometheus.html" "Prometheus") }}
{{ range query "up{job='prometheus'}" | sortByLabel "instance" }}
  {{ template "_menuDropItem" (args . (printf "prometheus-overview.html?instance=%s" (.Labels.instance | urlquery)) .Labels.instance) }}
{{ end }}
{{ template "_menuEndDropMenu" }}
{{ end }}


{{ if query "up{job='snmp'}" }}
{{ template "_menuDropMenu" (args . "snmp.html" "SNMP") }}
{{ range query "up{job='prometheus'}" | sortByLabel "instance" }}
  {{ template "_menuDropItem" (args . (printf "snmp-overview.html?instance=%s" (.Labels.instance | urlquery)) .Labels.instance) }}
{{ end }}
{{ template "_menuEndDropMenu" }}
{{ end }}


{{ if query "up{job='cloudwatch'}" }}
{{ template "_menuItem" (args . "cloudwatch.html" "CloudWatch") }}
{{ end }}

{{ if query "aws_elasticache_cpuutilization_average{job='aws_elasticache'}" }}
{{ template "_menuItem" (args . "aws_elasticache.html" "ElastiCache") }}
{{ end }}

{{ if query "aws_elb_healthy_host_count_average{job='aws_elb'}" }}
{{ template "_menuItem" (args . "aws_elb.html" "ELB") }}
{{ end }}

{{ if query "aws_redshift_health_status_average{job='aws_redshift'}" }}
{{ template "_menuItem" (args . "aws_redshift.html" "Redshift") }}
{{ end }}

      </ul>
    </div>
</div>

{{ end }}

{{/* Helper, pass (args . path name) */}}
{{ define "_menuItem" }}
  <li {{ if eq .arg0.Path .arg1 }} class="prom_lhs_menu_selected" {{ end }}><a href="{{ .arg1 }}">{{ .arg2 }}</a></li>
  <li class="divider-vertical"></li>
{{ end }}

{{ define "_menuDropMenu" }}
  <li class="dropdown">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button"
       aria-haspopup="true" aria-expanded="false">{{ .arg2 }}<span
       class="caret"></span></a>
   <ul class="dropdown-menu">
     {{ template "_menuDropItem" (args . .arg1 "Overview") }}
{{ end }}

{{ define "_menuDropItem" }}
  <li><a href={{ .arg1 }}>{{ .arg2 }}</a></li>
{{ end }}

{{ define "_menuDropDivider" }}
  <li role="separator" class="divider"></li>
{{ end }}

{{ define "_menuEndDropMenu" }}
    </ul>
  </li>
{{ end }}

