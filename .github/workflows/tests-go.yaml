name: Run Tests for Go Code

on:
  workflow_run:
    workflows: ["Run Tests for C++ Code"]
    types: 
      - completed
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - pp

jobs:
  go-tests-arm:
    defaults:
      run:
        working-directory: pp
    runs-on: fsn-dev-arm-runner
    env:
      ARCH: arm64
    container:
      image: "${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-arm64"
    strategy:
      matrix:
        OPT: [dbg, opt]
        SANITIZERS: [no_sanitizers, with_sanitizers]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Go Testing Tools
      
        run: |
          mkdir -p .cache
          go install github.com/jstemmer/go-junit-report/v2@latest
          go install github.com/axw/gocov/gocov@latest
          go install github.com/AlekSi/gocov-xml@latest

      - name: Run Go Tests
        env:
          GOPATH: "$GITHUB_WORKSPACE/.cache"
          GOBIN: "/usr/local/go/bin"
        run: |
          go test $(./scripts/ci_get_go_test_flags.sh) -v -cover -count=1 -coverprofile=coverage.txt -covermode=atomic ./go/... 2>&1 | tee report.txt

      - name: Process Coverage + Reports
        run: |
          cat report.txt | go-junit-report > report.xml
          sed -i '/\(pb\|easyjson\|string\)\.go/d' coverage.txt
          gocov convert coverage.txt | gocov-xml > coverage.xml
          go tool cover -func=coverage.txt | tail -n 1 | awk '{print "Total coverage:", $3;}'

      - name: Upload Go Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: go-unit-tests-${{ env.ARCH }}-${{ matrix.OPT }}-asan-${{ matrix.SANITIZERS }}
          path: report.xml
          retention-days: 7

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage-report-${{ env.ARCH }}-${{ matrix.OPT }}-asan-${{ matrix.SANITIZERS }}
          path: coverage.xml
          retention-days: 7

  go-tests-amd:
    defaults:
      run:
        working-directory: pp
    runs-on: fsn-dev-gitlab-runner
    env:
      ARCH: x86_64
    container:
      image: "${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-x86_64"
    strategy:
      matrix:
        OPT: [dbg, opt]
        SANITIZERS: [no_sanitizers, with_sanitizers]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Go Testing Tools
        run: |
          mkdir -p .cache
          go install github.com/jstemmer/go-junit-report/v2@latest
          go install github.com/axw/gocov/gocov@latest
          go install github.com/AlekSi/gocov-xml@latest

      - name: Run Go Tests
        env:
          GOPATH: "$GITHUB_WORKSPACE/.cache"
          GOBIN: "/usr/local/go/bin"
        run: |
          go test $(./scripts/ci_get_go_test_flags.sh) -v -cover -count=1 -coverprofile=coverage.txt -covermode=atomic ./go/... 2>&1 | tee report.txt

      - name: Process Coverage + Reports
        run: |
          cat report.txt | go-junit-report > report.xml
          sed -i '/\(pb\|easyjson\|string\)\.go/d' coverage.txt
          gocov convert coverage.txt | gocov-xml > coverage.xml
          go tool cover -func=coverage.txt | tail -n 1 | awk '{print "Total coverage:", $3;}'

      - name: Upload Go Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: go-unit-tests-${{ env.ARCH }}-${{ matrix.OPT }}-asan-${{ matrix.SANITIZERS }}
          path: report.xml
          retention-days: 7

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage-report-${{ env.ARCH }}-${{ matrix.OPT }}-asan-${{ matrix.SANITIZERS }}
          path: coverage.xml
          retention-days: 7