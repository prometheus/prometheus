name: Build with Werf

on:
  workflow_run:
    workflows:
      - "Run Tests for C++ Code"
      - "Run Tests for Go Code"
    types: 
      - completed
  push:
    branches:
      - pp
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened

env:
  WERF_VER: "1.2 ea"

jobs:
  build-arm:
    runs-on: fsn-dev-arm-runner
    env: 
      ARCH: arm64
    strategy:
      matrix:
        COMPILATION_MODE: [dbg, opt]
        ASAN: [true, false]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Werf environment
        run: |
          . $(trdl use werf ${WERF_VER})
          . $(werf ci-env github --as-file)

      - name: Build with Werf
        run: |
          werf build --add-custom-tag="%image%-${{ github.ref_name }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: werf-artifacts-arm64-${{ matrix.COMPILATION_MODE }}-asan-${{ matrix.ASAN }}
          path: werf/.werf/tmp
          retention-days: 7

  build-amd:
    runs-on: fsn-dev-gitlab-runner
    env: 
      ARCH: x86_64
      BASE: ubuntu
    strategy:
      matrix:
        COMPILATION_MODE: [dbg, opt]
        ASAN: [true, false]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Werf
        run: |
          curl -fsSL https://werf.io/install.sh | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH # Добавляем werf в PATH

      - name: Configure Werf environment
        run: |
          . $(trdl use werf ${WERF_VER})
          . $(werf ci-env --as-file github)

      - name: Build with Werf
        run: |
          werf build --add-custom-tag="%image%-${{ github.ref_name }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: werf-artifacts-x86_64-${{ matrix.COMPILATION_MODE }}-asan-${{ matrix.ASAN }}
          path: werf/.werf/tmp
          retention-days: 7