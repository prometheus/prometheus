name: Build Test Image

on:
  push:
    branches:
      - pp
    paths:
      - Dockerfile.ci
  pull_request:
    paths:
      - Dockerfile.ci

env:
  BAZEL_VERSION: "7.4.1"
  GO_VERSION: "1.23.2"

jobs:
  build-ci-image-arm:
    runs-on: fsn-dev-arm-runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_JOB_TOKEN }} ${{ secrets.CI_REGISTRY }}

      - name: Build and Push Docker Image
        env:
          ARCH: arm64
          GO_ARCH: arm64
        run: |
          docker build -f Dockerfile.ci \
            -t ${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-${{ env.ARCH }}-ubuntu \
            --build-arg ARCH=${{ env.ARCH }} \
            --build-arg BAZEL_ARCH=${{ env.ARCH }} \
            --build-arg BAZEL_VERSION=${{ env.BAZEL_VERSION }} \
            --build-arg GO_ARCH=${{ env.GO_ARCH }} \
            --build-arg GO_VERSION=${{ env.GO_VERSION }} .
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-${{ env.ARCH }}-ubuntu

  build-ci-image-amd:
    runs-on: fsn-dev-gitlab-runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_JOB_TOKEN }} ${{ secrets.CI_REGISTRY }}

      - name: Build and Push Docker Image
        env:
          ARCH: x86_64
          GO_ARCH: amd64
        run: |
          docker build -f Dockerfile.ci \
            -t ${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-${{ env.ARCH }}-ubuntu \
            --build-arg ARCH=${{ env.ARCH }} \
            --build-arg BAZEL_ARCH=${{ env.ARCH }} \
            --build-arg BAZEL_VERSION=${{ env.BAZEL_VERSION }} \
            --build-arg GO_ARCH=${{ env.GO_ARCH }} \
            --build-arg GO_VERSION=${{ env.GO_VERSION }} .
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}:gcc-tools-${{ env.ARCH }}-ubuntu
